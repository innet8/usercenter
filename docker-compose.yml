---
version: "3.4"

services:

  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - .cache/database:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-}:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:?database password required}
      POSTGRES_USER: ${DB_USERNAME:-authentik}
      POSTGRES_DB: ${DB_DBNAME:-authentik}
    env_file:
      - .env

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - .cache/redis:/data

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.2}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${DB_USERNAME:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${DB_DBNAME:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./media:/media
      # - ./custom-templates:/templates
    env_file:
      - .env
    ports:
      - "${AUTHENTIK_COMPOSE_PORT_HTTP:-9000}:9000"
      - "${AUTHENTIK_COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - postgresql
      - redis

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.2}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${DB_USERNAME:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${DB_DBNAME:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASSWORD}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis

